<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qingfeng.qingblog.dao.SysLogMapper">
  <resultMap id="BaseResultMap" type="com.qingfeng.qingblog.model.SysLog">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="ip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="operate_user" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="operate_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="operate_by" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, ip, operate_user, create_time, remark, operate_url, operate_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qingfeng.qingblog.model.SysLog">
    insert into sys_log (id, ip, operate_user, 
      create_time, remark, operate_url, 
      operate_by)
    values (#{id,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{operateUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{operateUrl,jdbcType=VARCHAR}, 
      #{operateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qingfeng.qingblog.model.SysLog">
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="operateUser != null">
        operate_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="operateUrl != null">
        operate_url,
      </if>
      <if test="operateBy != null">
        operate_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="operateUser != null">
        #{operateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operateUrl != null">
        #{operateUrl,jdbcType=VARCHAR},
      </if>
      <if test="operateBy != null">
        #{operateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qingfeng.qingblog.model.SysLog">
    update sys_log
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="operateUser != null">
        operate_user = #{operateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operateUrl != null">
        operate_url = #{operateUrl,jdbcType=VARCHAR},
      </if>
      <if test="operateBy != null">
        operate_by = #{operateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qingfeng.qingblog.model.SysLog">
    update sys_log
    set ip = #{ip,jdbcType=VARCHAR},
      operate_user = #{operateUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      operate_url = #{operateUrl,jdbcType=VARCHAR},
      operate_by = #{operateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>